{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-ae9f7e2fa4a2e419f4e5.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    h3: \"h3\",\n    img: \"img\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `A little bit of myself`,\n    sx: {\n      fontSize: [4, 5, 6],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"I'm Phat and I am a research scientist in Computer vison at \", React.createElement(_components.a, {\n    href: \"https://traxretail.com\"\n  }, \"Trax Retail\"), \".\\nPiror to that, I did my PhD under the supervision of \", React.createElement(_components.a, {\n    href: \"https://julien-mille.gitlab.io/www/\"\n  }, \"Julien Mille\"), \", Nicolas Ragot, Dominique Li and Donatello Conte\\nin \", React.createElement(_components.a, {\n    href: \"https://lifat.univ-tours.fr/\"\n  }, \"Laboratory of Fundamental and Applied Computer Science of Tours\"), \".\\nI received my engineer degree at INSA Centre Val de Loire.\"), \"\\n\", React.createElement(_components.p, null, \"During my universtity years (2015-2018), I have done my internships at the Laboratory of Signal and Image Processing (Rennes) and in the company of RF-Track.\\nThe domains that I have done during these two internships are mainly Embedded Software, Signal Processing and Machine Learning.\"), \"\\n\", React.createElement(_components.h3, null, \"Here is how I look like\"), \"\\n\", React.createElement(_components.img, {\n    src: \"/photos/321478863_1169482710350989_3642175476793154591_n.jpg\",\n    alt: \"circle logo\"\n  }));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","p","h3","img","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","fontSize","fontWeight","color","href","src","alt","wrapper","MDXLayout","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","styles","_t$styles","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","seo","url","content","property","rel","type","sizes","withPrefix"],"sourceRoot":""}